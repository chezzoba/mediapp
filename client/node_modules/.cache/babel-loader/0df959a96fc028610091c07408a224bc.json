{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nimport { setAlert } from './alert';\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(er => dispatch(setAlert(er.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/kaizadwadia0/MERNCourse/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","setAlert","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","er","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,QAA8C,SAA9C;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACrE,QAAMC,MAAM,GAAG;AAACC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAAV,GAAf;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAEf,gBAAP;AAAyBgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAtC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,EAAE,IAAIf,QAAQ,CAACL,QAAQ,CAACoB,EAAE,CAACC,GAAJ,EAAS,QAAT,CAAT,CAA7B;AACH;;AACDhB,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAEd;AAAP,KAAD,CAAR;AACH;AACJ,CAdM","sourcesContent":["import axios from 'axios';\nimport {REGISTER_SUCCESS, REGISTER_FAIL} from './types';\nimport { setAlert } from './alert';\n\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {headers: {\"Content-Type\": 'application/json'}};\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        const res = await axios.post('/api/users', body, config);\n        dispatch({type: REGISTER_SUCCESS, payload: res.data});\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach(er => dispatch(setAlert(er.msg, 'danger')));\n        }\n        dispatch({type: REGISTER_FAIL});\n    }\n}"]},"metadata":{},"sourceType":"module"}